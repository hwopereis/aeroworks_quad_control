<?xml version="1.0"?>
<!--

This launch file starts the necessities for controlling the AeroQuad with a ROS driven position controller.
The PIXHAWK should be equiped with recent (master branch) px4-fmu software. It should support off-board control.
It runs using the optitrack, for position control.

This launch file starts the following nodes:

- A mocap_optitrack node with predefined settings from mavros_mocap.yaml
- A position controller node with parameters defined in here.
- A mavros-mavlink node.
  -->

<launch> 

  <arg name="output" default="0"/>
  
  <group if="$(arg output)">
      <!-- Mocap node -->
      <node pkg="mocap_optitrack" type="mocap_node" name="mocap_node" respawn="false" output="screen" 
      launch-prefix="gnome-terminal --hide-menubar --window-with-profile=blue -t Mocap-optitrack --geometry=80x12+0+50 -e">
      <rosparam file="$(find mocap_optitrack)/config/mavros_mocap.yaml" command="load" />
      </node>
  </group>
  <group unless="$(arg output)">
      <!-- Mocap node -->
      <node pkg="mocap_optitrack" type="mocap_node" name="mocap_node" respawn="false">
      <rosparam file="$(find mocap_optitrack)/config/mavros_mocap.yaml" command="load" />
      </node>
  </group>
  <!-- Joystick node -->
  <node pkg="joy" type="joy_node" name="joystick_node" output="screen"/>
  
  <!-- Joystick converter -->
  <node pkg="joystick_converter" type="joystick_to_cmd_vel.py" name="joystick_converter_node" output="screen">
    <param name="joy_gain_x" value="10"/>
    <param name="joy_gain_y" value="-10"/>
    <param name="joy_gain_z" value="1"/>
    <param name="joy_gain_yaw" value="1"/>
  </node>  
  
  <!-- Controller node -->
  <node name="control" pkg="aeroquad" type="controller.py" output="screen">
  </node>  
  
  <!-- Mavros node -->
  <include file="$(find mavros)/launch/px4.launch"/>   
</launch>
